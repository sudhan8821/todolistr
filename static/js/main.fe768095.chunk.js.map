{"version":3,"sources":["CreateTask.js","TaskItem.js","TaskList.js","Main.js","App.js","index.js"],"names":["CreateTask","props","state","tasks","handleClick","bind","handleSubmit","evt","this","setState","target","value","preventDefault","createTask","onSubmit","type","onChange","className","Component","TaskItem","deleteTask","task","taskItem","taskName","isEditing","handleChange","toggleTask","editing","id","event","editTask","colSpan","style","float","onClick","setIsEditing","readOnly","checked","isCompleted","TaskList","map","t","index","Main","allTasks","localStorage","getItem","JSON","parse","trim","newTask","allTask","console","log","setItem","stringify","alert","idx","arr","filter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe768095.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./CreateTask.css\";\r\nexport default class CreateTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             tasks:[]\r\n        }\r\n        this.handleClick=this.handleClick.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleClick(evt)\r\n    {\r\n        this.setState({tasks:evt.target.value});\r\n    }\r\n    handleSubmit(evt)\r\n    {\r\n        evt.preventDefault();\r\n        this.props.createTask(this.state.tasks);\r\n        this.setState({tasks:\"\"}); \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" value={this.state.tasks} onChange={this.handleClick}/>\r\n                    <button className=\"add\">Add Task</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TaskItem.css\";\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.state = { task: this.props.taskItem.taskName, isEditing: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n  setIsEditing(editing) {\r\n    this.setState({ isEditing: editing });\r\n  }\r\n  deleteTask() {\r\n    this.props.deleteTask(this.props.id);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ task: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  toggleTask() {\r\n    this.props.toggleTask(this.props.id);\r\n  }\r\n  render() {\r\n    let result;\r\n\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <tr>\r\n          <td colSpan=\"2\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.task}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span style={{ float: \"right\" }}>\r\n                <button className=\"save task\">Save</button>\r\n                <button\r\n                  className=\"back task\"\r\n                  onClick={() => this.setIsEditing(false)}\r\n                >\r\n                  Back\r\n                </button>\r\n              </span>\r\n            </form>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      result = (\r\n        <tr>\r\n          <td onClick={this.toggleTask} className=\"task\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.props.taskItem.isCompleted}\r\n            />\r\n            <span\r\n              className={\r\n                this.props.taskItem.isCompleted ? \"completed\" : \"not-completed\"\r\n              }\r\n            >\r\n              {this.props.taskItem.taskName}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"edit task\"\r\n              onClick={() => this.setIsEditing(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button className=\"delete task\" onClick={this.deleteTask}>\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./TaskList.css\";\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((t, index) => {\r\n            return (\r\n              <TaskItem\r\n                key={index}\r\n                taskItem={t}\r\n                id={index}\r\n                deleteTask={this.props.deleteTask}\r\n                editTask={this.props.editTask}\r\n                toggleTask={this.props.toggleTask}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./Main.css\";\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let allTasks = localStorage.getItem(\"tasks\");\r\n    if (allTasks === null) {\r\n      allTasks = [];\r\n    } else {\r\n      allTasks = JSON.parse(allTasks);\r\n    }\r\n\r\n    this.state = { tasks: allTasks };\r\n    this.createTask = this.createTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.editTask = this.editTask.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n  createTask(task) {\r\n    if (task.trim() === \"\") {\r\n      alert(\"Empty task cannot be added!\");\r\n      return;\r\n    }\r\n    let newTask = { taskName: task.trim(), isCompleted: false };\r\n    let allTask = [...this.state.tasks, newTask];\r\n    this.setState({ tasks: allTask }, () => {\r\n      console.log(this.state.tasks);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n  deleteTask(idx) {\r\n    let arr = this.state.tasks.filter((t, index) => index !== idx);\r\n    this.setState({ tasks: arr }, () => {\r\n      console.log(this.state.tasks);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n  editTask(index, value) {\r\n    let arr = [...this.state.tasks];\r\n    arr[index].taskName = value;\r\n    this.setState({ tasks: arr }, () => {\r\n      console.log(this.state.tasks);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n  toggleTask(index) {\r\n    let arr = [...this.state.tasks];\r\n    arr[index].isCompleted = !arr[index].isCompleted;\r\n    this.setState({ tasks: arr }, () => {\r\n      console.log(this.state.tasks);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Main\">\r\n        <h1>Todo List</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n          <br />\r\n          <TaskList\r\n            tasks={this.state.tasks}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Main from \"./Main\";\nimport \"./App.css\"\nexport default class App extends Component {\n  render() {\n    return <div><Main/></div>;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}